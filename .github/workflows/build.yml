# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['7.0.x']
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          working-directory: 'src'
          filters: |
            src:
              - 'src/**'
      - name: Install dependencies
        working-directory: src
        if: steps.changes.outputs.src == 'true'
        run: dotnet restore
      
      - name: Build
        working-directory: src/WebHost
        if: steps.changes.outputs.src == 'true'
        run: dotnet build --configuration Release --no-restore
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['7.0.x']
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          working-directory: 'tests'
          filters: |
            src:
              - 'tests/**'
      - name: Tests
        working-directory: src
        if: steps.changes.outputs.src == 'true'
        run: dotnet test AntSolution.sln --no-restore --verbosity normal
      
  deploy:
    runs-on: ubuntu-latest
    needs: [build, tests]
    strategy:
      matrix:
        dotnet-version: ['7.0.x']
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          working-directory: 'src'
          filters: |
            src:
              - 'src/**'

      - name: Log in to Docker Hub
        if: steps.changes.outputs.src == 'true'
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        if: steps.changes.outputs.src == 'true'
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: tuanitpro/product_api
      
      - name: Build and push Docker image
        if: steps.changes.outputs.src == 'true'
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
