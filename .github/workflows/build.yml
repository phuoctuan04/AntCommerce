# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x']
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          working-directory: 'src'
          filters: |
            src:
              - 'src/**'
      - name: Install dependencies
        working-directory: src
        if: steps.changes.outputs.src == 'true'
        run: dotnet restore
      
      - name: Build
        working-directory: src/WebHost
        if: steps.changes.outputs.src == 'true'
        run: dotnet build --configuration Release --no-restore
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
       
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
        
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1.14.1
      #   env:
      #     DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      #     DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      #   with:
      #     username: "$DOCKERHUB_USERNAME"
      #     password: "$DOCKERHUB_TOKEN"

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     tags: tuanitpro/product_api:latest
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x']
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          working-directory: 'tests'
          filters: |
            src:
              - 'tests/**'
      - name: Test
        working-directory: src
        if: steps.changes.outputs.src == 'true'
        run: dotnet test AntSolution.sln --no-restore --verbosity normal
      
    
